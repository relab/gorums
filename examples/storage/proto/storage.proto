syntax = "proto3";

package storage;

option go_package = "github.com/relab/gorums/examples/storage/proto";

import "gorums.proto";
import "google/protobuf/timestamp.proto";

service Storage {
  // ReadRPC executes the Read RPC on a single Node
  rpc ReadRPC(ReadRequest) returns (ReadResponse) {
    option (gorums.ordered) = true;
  }
  // WriteRPC executes the Write RPC on a single Node
  rpc WriteRPC(WriteRequest) returns (WriteResponse) {
    option (gorums.ordered) = true;
  }
  // ReadQC executes the Read Quorum Call on a configuration
  // of Nodes and returns the most recent value.
  rpc ReadQC(ReadRequest) returns (ReadResponse) {
    option (gorums.quorumcall) = true;
    option (gorums.ordered) = true;
  }
  // WriteQC executes the Write Quorum Call on a configuration
  // of Nodes and returns true if a majority of Nodes were updated.
  rpc WriteQC(WriteRequest) returns (WriteResponse) {
    option (gorums.quorumcall) = true;
    option (gorums.ordered) = true;
  }
}

message ReadRequest { string Key = 1; }

message ReadResponse {
  bool OK = 1;
  string Value = 2;
  google.protobuf.Timestamp Time = 3;
}

message WriteRequest {
  string Key = 1;
  string Value = 2;
  google.protobuf.Timestamp Time = 3;
}

message WriteResponse { bool New = 1; }
