// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.2
// source: benchmark/benchmark.proto

package benchmark

import (
	_ "github.com/relab/gorums"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Echo struct {
	state              protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Payload []byte                 `protobuf:"bytes,1,opt,name=payload"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *Echo) Reset() {
	*x = Echo{}
	mi := &file_benchmark_benchmark_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Echo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Echo) ProtoMessage() {}

func (x *Echo) ProtoReflect() protoreflect.Message {
	mi := &file_benchmark_benchmark_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Echo) GetPayload() []byte {
	if x != nil {
		return x.xxx_hidden_Payload
	}
	return nil
}

func (x *Echo) SetPayload(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_Payload = v
}

type Echo_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Payload []byte
}

func (b0 Echo_builder) Build() *Echo {
	m0 := &Echo{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Payload = b.Payload
	return m0
}

type TimedMsg struct {
	state               protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_SendTime int64                  `protobuf:"varint,1,opt,name=SendTime"`
	xxx_hidden_Payload  []byte                 `protobuf:"bytes,2,opt,name=payload"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *TimedMsg) Reset() {
	*x = TimedMsg{}
	mi := &file_benchmark_benchmark_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimedMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimedMsg) ProtoMessage() {}

func (x *TimedMsg) ProtoReflect() protoreflect.Message {
	mi := &file_benchmark_benchmark_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *TimedMsg) GetSendTime() int64 {
	if x != nil {
		return x.xxx_hidden_SendTime
	}
	return 0
}

func (x *TimedMsg) GetPayload() []byte {
	if x != nil {
		return x.xxx_hidden_Payload
	}
	return nil
}

func (x *TimedMsg) SetSendTime(v int64) {
	x.xxx_hidden_SendTime = v
}

func (x *TimedMsg) SetPayload(v []byte) {
	if v == nil {
		v = []byte{}
	}
	x.xxx_hidden_Payload = v
}

type TimedMsg_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	SendTime int64
	Payload  []byte
}

func (b0 TimedMsg_builder) Build() *TimedMsg {
	m0 := &TimedMsg{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_SendTime = b.SendTime
	x.xxx_hidden_Payload = b.Payload
	return m0
}

type StartRequest struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartRequest) Reset() {
	*x = StartRequest{}
	mi := &file_benchmark_benchmark_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartRequest) ProtoMessage() {}

func (x *StartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_benchmark_benchmark_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type StartRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 StartRequest_builder) Build() *StartRequest {
	m0 := &StartRequest{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type StartResponse struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartResponse) Reset() {
	*x = StartResponse{}
	mi := &file_benchmark_benchmark_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartResponse) ProtoMessage() {}

func (x *StartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_benchmark_benchmark_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type StartResponse_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 StartResponse_builder) Build() *StartResponse {
	m0 := &StartResponse{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type StopRequest struct {
	state         protoimpl.MessageState `protogen:"opaque.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopRequest) Reset() {
	*x = StopRequest{}
	mi := &file_benchmark_benchmark_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopRequest) ProtoMessage() {}

func (x *StopRequest) ProtoReflect() protoreflect.Message {
	mi := &file_benchmark_benchmark_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

type StopRequest_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

}

func (b0 StopRequest_builder) Build() *StopRequest {
	m0 := &StopRequest{}
	b, x := &b0, m0
	_, _ = b, x
	return m0
}

type Result struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Name        string                 `protobuf:"bytes,1,opt,name=Name"`
	xxx_hidden_TotalOps    uint64                 `protobuf:"varint,2,opt,name=TotalOps"`
	xxx_hidden_TotalTime   int64                  `protobuf:"varint,3,opt,name=TotalTime"`
	xxx_hidden_Throughput  float64                `protobuf:"fixed64,4,opt,name=Throughput"`
	xxx_hidden_LatencyAvg  float64                `protobuf:"fixed64,5,opt,name=LatencyAvg"`
	xxx_hidden_LatencyVar  float64                `protobuf:"fixed64,6,opt,name=LatencyVar"`
	xxx_hidden_AllocsPerOp uint64                 `protobuf:"varint,7,opt,name=AllocsPerOp"`
	xxx_hidden_MemPerOp    uint64                 `protobuf:"varint,8,opt,name=MemPerOp"`
	xxx_hidden_ServerStats *[]*MemoryStat         `protobuf:"bytes,9,rep,name=ServerStats"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Result) Reset() {
	*x = Result{}
	mi := &file_benchmark_benchmark_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Result) ProtoMessage() {}

func (x *Result) ProtoReflect() protoreflect.Message {
	mi := &file_benchmark_benchmark_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Result) GetName() string {
	if x != nil {
		return x.xxx_hidden_Name
	}
	return ""
}

func (x *Result) GetTotalOps() uint64 {
	if x != nil {
		return x.xxx_hidden_TotalOps
	}
	return 0
}

func (x *Result) GetTotalTime() int64 {
	if x != nil {
		return x.xxx_hidden_TotalTime
	}
	return 0
}

func (x *Result) GetThroughput() float64 {
	if x != nil {
		return x.xxx_hidden_Throughput
	}
	return 0
}

func (x *Result) GetLatencyAvg() float64 {
	if x != nil {
		return x.xxx_hidden_LatencyAvg
	}
	return 0
}

func (x *Result) GetLatencyVar() float64 {
	if x != nil {
		return x.xxx_hidden_LatencyVar
	}
	return 0
}

func (x *Result) GetAllocsPerOp() uint64 {
	if x != nil {
		return x.xxx_hidden_AllocsPerOp
	}
	return 0
}

func (x *Result) GetMemPerOp() uint64 {
	if x != nil {
		return x.xxx_hidden_MemPerOp
	}
	return 0
}

func (x *Result) GetServerStats() []*MemoryStat {
	if x != nil {
		if x.xxx_hidden_ServerStats != nil {
			return *x.xxx_hidden_ServerStats
		}
	}
	return nil
}

func (x *Result) SetName(v string) {
	x.xxx_hidden_Name = v
}

func (x *Result) SetTotalOps(v uint64) {
	x.xxx_hidden_TotalOps = v
}

func (x *Result) SetTotalTime(v int64) {
	x.xxx_hidden_TotalTime = v
}

func (x *Result) SetThroughput(v float64) {
	x.xxx_hidden_Throughput = v
}

func (x *Result) SetLatencyAvg(v float64) {
	x.xxx_hidden_LatencyAvg = v
}

func (x *Result) SetLatencyVar(v float64) {
	x.xxx_hidden_LatencyVar = v
}

func (x *Result) SetAllocsPerOp(v uint64) {
	x.xxx_hidden_AllocsPerOp = v
}

func (x *Result) SetMemPerOp(v uint64) {
	x.xxx_hidden_MemPerOp = v
}

func (x *Result) SetServerStats(v []*MemoryStat) {
	x.xxx_hidden_ServerStats = &v
}

type Result_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Name        string
	TotalOps    uint64
	TotalTime   int64
	Throughput  float64
	LatencyAvg  float64
	LatencyVar  float64
	AllocsPerOp uint64
	MemPerOp    uint64
	ServerStats []*MemoryStat
}

func (b0 Result_builder) Build() *Result {
	m0 := &Result{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Name = b.Name
	x.xxx_hidden_TotalOps = b.TotalOps
	x.xxx_hidden_TotalTime = b.TotalTime
	x.xxx_hidden_Throughput = b.Throughput
	x.xxx_hidden_LatencyAvg = b.LatencyAvg
	x.xxx_hidden_LatencyVar = b.LatencyVar
	x.xxx_hidden_AllocsPerOp = b.AllocsPerOp
	x.xxx_hidden_MemPerOp = b.MemPerOp
	x.xxx_hidden_ServerStats = &b.ServerStats
	return m0
}

type MemoryStat struct {
	state             protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Allocs uint64                 `protobuf:"varint,1,opt,name=Allocs"`
	xxx_hidden_Memory uint64                 `protobuf:"varint,2,opt,name=Memory"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *MemoryStat) Reset() {
	*x = MemoryStat{}
	mi := &file_benchmark_benchmark_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MemoryStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemoryStat) ProtoMessage() {}

func (x *MemoryStat) ProtoReflect() protoreflect.Message {
	mi := &file_benchmark_benchmark_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *MemoryStat) GetAllocs() uint64 {
	if x != nil {
		return x.xxx_hidden_Allocs
	}
	return 0
}

func (x *MemoryStat) GetMemory() uint64 {
	if x != nil {
		return x.xxx_hidden_Memory
	}
	return 0
}

func (x *MemoryStat) SetAllocs(v uint64) {
	x.xxx_hidden_Allocs = v
}

func (x *MemoryStat) SetMemory(v uint64) {
	x.xxx_hidden_Memory = v
}

type MemoryStat_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Allocs uint64
	Memory uint64
}

func (b0 MemoryStat_builder) Build() *MemoryStat {
	m0 := &MemoryStat{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Allocs = b.Allocs
	x.xxx_hidden_Memory = b.Memory
	return m0
}

type MemoryStatList struct {
	state                  protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_MemoryStats *[]*MemoryStat         `protobuf:"bytes,1,rep,name=MemoryStats"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *MemoryStatList) Reset() {
	*x = MemoryStatList{}
	mi := &file_benchmark_benchmark_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MemoryStatList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemoryStatList) ProtoMessage() {}

func (x *MemoryStatList) ProtoReflect() protoreflect.Message {
	mi := &file_benchmark_benchmark_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *MemoryStatList) GetMemoryStats() []*MemoryStat {
	if x != nil {
		if x.xxx_hidden_MemoryStats != nil {
			return *x.xxx_hidden_MemoryStats
		}
	}
	return nil
}

func (x *MemoryStatList) SetMemoryStats(v []*MemoryStat) {
	x.xxx_hidden_MemoryStats = &v
}

type MemoryStatList_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	MemoryStats []*MemoryStat
}

func (b0 MemoryStatList_builder) Build() *MemoryStatList {
	m0 := &MemoryStatList{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_MemoryStats = &b.MemoryStats
	return m0
}

var File_benchmark_benchmark_proto protoreflect.FileDescriptor

const file_benchmark_benchmark_proto_rawDesc = "" +
	"\n" +
	"\x19benchmark/benchmark.proto\x12\tbenchmark\x1a\x1bgoogle/protobuf/empty.proto\x1a\fgorums.proto\" \n" +
	"\x04Echo\x12\x18\n" +
	"\apayload\x18\x01 \x01(\fR\apayload\"@\n" +
	"\bTimedMsg\x12\x1a\n" +
	"\bSendTime\x18\x01 \x01(\x03R\bSendTime\x12\x18\n" +
	"\apayload\x18\x02 \x01(\fR\apayload\"\x0e\n" +
	"\fStartRequest\"\x0f\n" +
	"\rStartResponse\"\r\n" +
	"\vStopRequest\"\xad\x02\n" +
	"\x06Result\x12\x12\n" +
	"\x04Name\x18\x01 \x01(\tR\x04Name\x12\x1a\n" +
	"\bTotalOps\x18\x02 \x01(\x04R\bTotalOps\x12\x1c\n" +
	"\tTotalTime\x18\x03 \x01(\x03R\tTotalTime\x12\x1e\n" +
	"\n" +
	"Throughput\x18\x04 \x01(\x01R\n" +
	"Throughput\x12\x1e\n" +
	"\n" +
	"LatencyAvg\x18\x05 \x01(\x01R\n" +
	"LatencyAvg\x12\x1e\n" +
	"\n" +
	"LatencyVar\x18\x06 \x01(\x01R\n" +
	"LatencyVar\x12 \n" +
	"\vAllocsPerOp\x18\a \x01(\x04R\vAllocsPerOp\x12\x1a\n" +
	"\bMemPerOp\x18\b \x01(\x04R\bMemPerOp\x127\n" +
	"\vServerStats\x18\t \x03(\v2\x15.benchmark.MemoryStatR\vServerStats\"<\n" +
	"\n" +
	"MemoryStat\x12\x16\n" +
	"\x06Allocs\x18\x01 \x01(\x04R\x06Allocs\x12\x16\n" +
	"\x06Memory\x18\x02 \x01(\x04R\x06Memory\"I\n" +
	"\x0eMemoryStatList\x127\n" +
	"\vMemoryStats\x18\x01 \x03(\v2\x15.benchmark.MemoryStatR\vMemoryStats2\xb2\x04\n" +
	"\tBenchmark\x12O\n" +
	"\x14StartServerBenchmark\x12\x17.benchmark.StartRequest\x1a\x18.benchmark.StartResponse\"\x04\xa0\xb5\x18\x01\x12F\n" +
	"\x13StopServerBenchmark\x12\x16.benchmark.StopRequest\x1a\x11.benchmark.Result\"\x04\xa0\xb5\x18\x01\x12I\n" +
	"\x0eStartBenchmark\x12\x17.benchmark.StartRequest\x1a\x18.benchmark.StartResponse\"\x04\xa0\xb5\x18\x01\x12V\n" +
	"\rStopBenchmark\x12\x16.benchmark.StopRequest\x1a\x15.benchmark.MemoryStat\"\x16\xa0\xb5\x18\x01\xf2\xb6\x18\x0eMemoryStatList\x124\n" +
	"\n" +
	"QuorumCall\x12\x0f.benchmark.Echo\x1a\x0f.benchmark.Echo\"\x04\xa0\xb5\x18\x01\x12=\n" +
	"\x0fAsyncQuorumCall\x12\x0f.benchmark.Echo\x1a\x0f.benchmark.Echo\"\b\xa0\xb5\x18\x01е\x18\x01\x124\n" +
	"\n" +
	"SlowServer\x12\x0f.benchmark.Echo\x1a\x0f.benchmark.Echo\"\x04\xa0\xb5\x18\x01\x12>\n" +
	"\tMulticast\x12\x13.benchmark.TimedMsg\x1a\x16.google.protobuf.Empty\"\x04\x98\xb5\x18\x01B(Z!github.com/relab/gorums/benchmark\x92\x03\x02\b\x02b\beditionsp\xe8\a"

var file_benchmark_benchmark_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_benchmark_benchmark_proto_goTypes = []any{
	(*Echo)(nil),           // 0: benchmark.Echo
	(*TimedMsg)(nil),       // 1: benchmark.TimedMsg
	(*StartRequest)(nil),   // 2: benchmark.StartRequest
	(*StartResponse)(nil),  // 3: benchmark.StartResponse
	(*StopRequest)(nil),    // 4: benchmark.StopRequest
	(*Result)(nil),         // 5: benchmark.Result
	(*MemoryStat)(nil),     // 6: benchmark.MemoryStat
	(*MemoryStatList)(nil), // 7: benchmark.MemoryStatList
	(*emptypb.Empty)(nil),  // 8: google.protobuf.Empty
}
var file_benchmark_benchmark_proto_depIdxs = []int32{
	6,  // 0: benchmark.Result.ServerStats:type_name -> benchmark.MemoryStat
	6,  // 1: benchmark.MemoryStatList.MemoryStats:type_name -> benchmark.MemoryStat
	2,  // 2: benchmark.Benchmark.StartServerBenchmark:input_type -> benchmark.StartRequest
	4,  // 3: benchmark.Benchmark.StopServerBenchmark:input_type -> benchmark.StopRequest
	2,  // 4: benchmark.Benchmark.StartBenchmark:input_type -> benchmark.StartRequest
	4,  // 5: benchmark.Benchmark.StopBenchmark:input_type -> benchmark.StopRequest
	0,  // 6: benchmark.Benchmark.QuorumCall:input_type -> benchmark.Echo
	0,  // 7: benchmark.Benchmark.AsyncQuorumCall:input_type -> benchmark.Echo
	0,  // 8: benchmark.Benchmark.SlowServer:input_type -> benchmark.Echo
	1,  // 9: benchmark.Benchmark.Multicast:input_type -> benchmark.TimedMsg
	3,  // 10: benchmark.Benchmark.StartServerBenchmark:output_type -> benchmark.StartResponse
	5,  // 11: benchmark.Benchmark.StopServerBenchmark:output_type -> benchmark.Result
	3,  // 12: benchmark.Benchmark.StartBenchmark:output_type -> benchmark.StartResponse
	6,  // 13: benchmark.Benchmark.StopBenchmark:output_type -> benchmark.MemoryStat
	0,  // 14: benchmark.Benchmark.QuorumCall:output_type -> benchmark.Echo
	0,  // 15: benchmark.Benchmark.AsyncQuorumCall:output_type -> benchmark.Echo
	0,  // 16: benchmark.Benchmark.SlowServer:output_type -> benchmark.Echo
	8,  // 17: benchmark.Benchmark.Multicast:output_type -> google.protobuf.Empty
	10, // [10:18] is the sub-list for method output_type
	2,  // [2:10] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_benchmark_benchmark_proto_init() }
func file_benchmark_benchmark_proto_init() {
	if File_benchmark_benchmark_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_benchmark_benchmark_proto_rawDesc), len(file_benchmark_benchmark_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_benchmark_benchmark_proto_goTypes,
		DependencyIndexes: file_benchmark_benchmark_proto_depIdxs,
		MessageInfos:      file_benchmark_benchmark_proto_msgTypes,
	}.Build()
	File_benchmark_benchmark_proto = out.File
	file_benchmark_benchmark_proto_goTypes = nil
	file_benchmark_benchmark_proto_depIdxs = nil
}
