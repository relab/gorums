// Code generated by protoc-gen-gorums. DO NOT EDIT.
// versions:
// 	protoc-gen-gorums v0.9.0-devel+0b7a5ba9
// 	protoc            v5.29.2
// source: zorums.proto

package dev

import (
	context "context"
	gorums "github.com/relab/gorums"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	iter "iter"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = gorums.EnforceVersion(9 - gorums.MinVersion)
	// Verify that the gorums runtime is sufficiently up-to-date.
	_ = gorums.EnforceVersion(gorums.MaxVersion - 9)
)

// QuorumCall plain.
func (c *Configuration) QuorumCall(ctx context.Context, in *Request) iter.Seq2[*Response, error] {
	cd := gorums.QuorumCallData{
		Message: in,
		Method:  "dev.ZorumsService.QuorumCall",
	}

	return gorums.QuorumCall[*Response](ctx, c.RawConfiguration, cd)
}

// QuorumCall with per_node_arg option.
func (c *Configuration) QuorumCallPerNodeArg(ctx context.Context, in *Request, f func(*Request, uint32) *Request) iter.Seq2[*Response, error] {
	cd := gorums.QuorumCallData{
		Message: in,
		Method:  "dev.ZorumsService.QuorumCallPerNodeArg",
	}
	cd.PerNodeArgFn = func(req protoreflect.ProtoMessage, nid uint32) protoreflect.ProtoMessage {
		return f(req.(*Request), nid)
	}

	return gorums.QuorumCall[*Response](ctx, c.RawConfiguration, cd)
}

// QuorumCall with custom_return_type option.
func (c *Configuration) QuorumCallCustomReturnType(ctx context.Context, in *Request) iter.Seq2[*MyResponse, error] {
	cd := gorums.QuorumCallData{
		Message: in,
		Method:  "dev.ZorumsService.QuorumCallCustomReturnType",
	}

	return gorums.QuorumCall[*MyResponse](ctx, c.RawConfiguration, cd)
}

// QuorumCallCombo with all supported options.
func (c *Configuration) QuorumCallCombo(ctx context.Context, in *Request, f func(*Request, uint32) *Request) iter.Seq2[*MyResponse, error] {
	cd := gorums.QuorumCallData{
		Message: in,
		Method:  "dev.ZorumsService.QuorumCallCombo",
	}
	cd.PerNodeArgFn = func(req protoreflect.ProtoMessage, nid uint32) protoreflect.ProtoMessage {
		return f(req.(*Request), nid)
	}

	return gorums.QuorumCall[*MyResponse](ctx, c.RawConfiguration, cd)
}

// QuorumCallEmpty for testing imported message type.
func (c *Configuration) QuorumCallEmpty(ctx context.Context, in *emptypb.Empty) iter.Seq2[*Response, error] {
	cd := gorums.QuorumCallData{
		Message: in,
		Method:  "dev.ZorumsService.QuorumCallEmpty",
	}

	return gorums.QuorumCall[*Response](ctx, c.RawConfiguration, cd)
}

// QuorumCallEmpty2 for testing imported message type.
func (c *Configuration) QuorumCallEmpty2(ctx context.Context, in *Request) iter.Seq2[*emptypb.Empty, error] {
	cd := gorums.QuorumCallData{
		Message: in,
		Method:  "dev.ZorumsService.QuorumCallEmpty2",
	}

	return gorums.QuorumCall[*emptypb.Empty](ctx, c.RawConfiguration, cd)
}
