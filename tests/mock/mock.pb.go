// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: tests/mock/mock.proto

package mock

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Request struct {
	state          protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Val string                 `protobuf:"bytes,1,opt,name=val"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Request) Reset() {
	*x = Request{}
	mi := &file_tests_mock_mock_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_tests_mock_mock_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Request) GetVal() string {
	if x != nil {
		return x.xxx_hidden_Val
	}
	return ""
}

func (x *Request) SetVal(v string) {
	x.xxx_hidden_Val = v
}

type Request_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Val string
}

func (b0 Request_builder) Build() *Request {
	m0 := &Request{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Val = b.Val
	return m0
}

type Response struct {
	state          protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Val string                 `protobuf:"bytes,1,opt,name=val"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Response) Reset() {
	*x = Response{}
	mi := &file_tests_mock_mock_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_tests_mock_mock_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *Response) GetVal() string {
	if x != nil {
		return x.xxx_hidden_Val
	}
	return ""
}

func (x *Response) SetVal(v string) {
	x.xxx_hidden_Val = v
}

type Response_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	Val string
}

func (b0 Response_builder) Build() *Response {
	m0 := &Response{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Val = b.Val
	return m0
}

var File_tests_mock_mock_proto protoreflect.FileDescriptor

const file_tests_mock_mock_proto_rawDesc = "" +
	"\n" +
	"\x15tests/mock/mock.proto\x12\x04mock\"\x1b\n" +
	"\aRequest\x12\x10\n" +
	"\x03val\x18\x01 \x01(\tR\x03val\"\x1c\n" +
	"\bResponse\x12\x10\n" +
	"\x03val\x18\x01 \x01(\tR\x03valB)Z\"github.com/relab/gorums/tests/mock\x92\x03\x02\b\x02b\beditionsp\xe8\a"

var file_tests_mock_mock_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_tests_mock_mock_proto_goTypes = []any{
	(*Request)(nil),  // 0: mock.Request
	(*Response)(nil), // 1: mock.Response
}
var file_tests_mock_mock_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_tests_mock_mock_proto_init() }
func file_tests_mock_mock_proto_init() {
	if File_tests_mock_mock_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_tests_mock_mock_proto_rawDesc), len(file_tests_mock_mock_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tests_mock_mock_proto_goTypes,
		DependencyIndexes: file_tests_mock_mock_proto_depIdxs,
		MessageInfos:      file_tests_mock_mock_proto_msgTypes,
	}.Build()
	File_tests_mock_mock_proto = out.File
	file_tests_mock_mock_proto_goTypes = nil
	file_tests_mock_mock_proto_depIdxs = nil
}
